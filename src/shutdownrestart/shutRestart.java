
package shutdownrestart;

import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author sakib
 */
public class shutRestart extends javax.swing.JFrame {

    int s;

    /**
     * Creates new form shutRestart
     */
    public shutRestart() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rest = new javax.swing.JButton();
        slp = new javax.swing.JButton();
        shut = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        abt = new javax.swing.JButton();
        jProgressBar2 = new javax.swing.JProgressBar();
        jProgressBar3 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        rest.setText("Restart");
        rest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restActionPerformed(evt);
            }
        });

        slp.setText("Sleep");
        slp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slpActionPerformed(evt);
            }
        });

        shut.setText("Shutdown");
        //ImageIcon icon = new ImageIcon("C:\\Users\\user\\Documents\\NetBeansProjects\\ShutdownRestart\\image\\shut.jpg");
        //shut.setIcon(icon);
        shut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shutActionPerformed(evt);
            }
        });

        progressBar.setValue(100);

        abt.setText("Abort");
        abt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abtActionPerformed(evt);
            }
        });

        jProgressBar2.setValue(100);

        jProgressBar3.setValue(100);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jProgressBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(shut)
                        .addGap(43, 43, 43)
                        .addComponent(rest))
                    .addComponent(abt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(slp, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addComponent(jProgressBar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shut, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rest, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(abt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restActionPerformed
        
        try {
            // TODO add your handling code here:
            Runtime runtime = Runtime.getRuntime();
            Process proc = runtime.exec("shutdown -r -t 100");
            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(shutRestart.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_restActionPerformed

    private void shutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shutActionPerformed
        
            try {
                // TODO add your handling code here:
                //Thread(th);
                Runtime runtime = Runtime.getRuntime();
                Process proc = runtime.exec("shutdown -s -t 1000");
                //System.exit(0);
                
                
            } catch (IOException ex) {
                Logger.getLogger(shutRestart.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_shutActionPerformed

    private void abtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abtActionPerformed
        try {
            // TODO add your handling code here:
            Runtime runtime = Runtime.getRuntime();
            Process proc =runtime.exec("shutdown -a");
            //System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(shutRestart.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_abtActionPerformed

    private void slpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slpActionPerformed
        try {
            // TODO add your handling code here:
            Thread.sleep((long) (1000 * 60 * .20));
                    } catch (InterruptedException ex) {
            Logger.getLogger(shutRestart.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            // TODO add your handling code here:
            Runtime runtime = Runtime.getRuntime();
            Process proc =runtime.exec("Rundll32.exe powrprof.dll,SetSuspendState Sleep");
            //System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(shutRestart.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_slpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(shutRestart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(shutRestart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(shutRestart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(shutRestart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new shutRestart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abt;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton rest;
    private javax.swing.JButton shut;
    private javax.swing.JButton slp;
    // End of variables declaration//GEN-END:variables
}
